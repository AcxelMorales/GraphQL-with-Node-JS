const express     = require('express');
const graphqlHttp = require('express-graphql');
const mongoose    = require('mongoose');

const Schema = require('./schema/schema');
const auth   = require('./utils/auth');

require('dotenv').config();

const app = express();

///////////////////////////////////////////////////////////////////////////////////////
// <= SETTINGS =>
///////////////////////////////////////////////////////////////////////////////////////
app.set('port', process.env.PORT || 3000);

///////////////////////////////////////////////////////////////////////////////////////
// <= MIDDLEWARES =>
///////////////////////////////////////////////////////////////////////////////////////
app.use(auth.verifyToken);

app.use('/graphql', graphqlHttp((req) => {
  return {
    schema  : Schema,
    context : {
      user: req.user
    }
  }
}));

///////////////////////////////////////////////////////////////////////////////////////
// <= DATABASE =>
///////////////////////////////////////////////////////////////////////////////////////
mongoose.connect('mongodb://localhost/graphql', {
  useNewUrlParser   : true,
  useUnifiedTopology: true,
  useFindAndModify  : false
})
.then(()   => console.log('DB Online'))
.catch(err => console.log(err));

mongoose.set('useCreateIndex', true);

///////////////////////////////////////////////////////////////////////////////////////
// <= LISTENER =>
///////////////////////////////////////////////////////////////////////////////////////
app.listen(app.get('port'), () => console.log(`Server on port: ${app.get('port')}`));
